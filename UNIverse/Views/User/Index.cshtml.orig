@model UNIverse.Models.ViewModels.UserProfileViewModel


@{
    ViewBag.Title = "Index";
}

<<<<<<< HEAD
<link href="@Url.Content("~/Content/Profile.css")" rel="stylesheet" type="text/css" />
<p>Number of sent friend requests: @Model.SentFriendRequests.Count()</p>
<p>Number of received friend requests: @Model.ReceivedFriendRequests.Count()</p>
<p>Number of friends: @Model.Friends.Count()</p>

@using (Html.BeginForm("AddFriend", "User", new { userId = Model.userId }, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    
    <input type="submit" value="Add Friend" class="btn btn-default" />
}
=======
<link href="@Url.Content("~/Content/profile.css")" rel="stylesheet" type="text/css" />
>>>>>>> cd221c8d70199f091c9d2028b4345f4edaec5817

<div class="col-md-6 col-md-push-6">
    <div class="profilepic">
        @if (Model.ProfilePicturePath != null)
        {
            <img src="@Url.Content(Model.ProfilePicturePath)" alt="Profile pic not found" />
        }
        else
        {
            <img src="https://findyourtrainer.com/static/images/avatar.jpg" alt="Profile pic not found" />
        }
    </div>
    <h2>@Model.Name</h2>
<<<<<<< HEAD
    <h4>Profile info goes here...</h4>

    <p>Groups</p>
    @if (Model.Groups != null)
    {
        foreach (var item in Model.Groups)
        {
            <ul>
                <li>@Html.ActionLink(@item.Name, "View", "Group", new { id=item.Id }, null)</li>
            </ul>
        }
    }
    <h3>Friends</h3>
    @foreach(var friend in Model.Friends)
    {
        <h4>@(friend.FirstName + " " + friend.LastName)</h4>
        <p>@friend.Email</p>
        <hr />
    }

    <h3>Sent friend requests</h3>
    @foreach (var request in Model.SentFriendRequests)
    {
        <h4>@(request.Receiver.FirstName + " " + request.Receiver.LastName)</h4>
        <p>Request since @request.RequestDate</p>
        <hr />
    }

    <h3>Received friend requests</h3>
    @foreach (var request in Model.ReceivedFriendRequests)
    {
        <h4>@(request.Sender.FirstName + " " + request.Sender.LastName)</h4>
        <p>Request since @request.RequestDate</p>
        using (Html.BeginForm("AddFriend", "User", new { userId = request.Sender.Id }, FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
    
            <input type="submit" value="Add Friend" class="btn btn-default" />
        }
        <small></small>
        <hr />
    }
=======
    <h4>Profile picture</h4>
    <img src="@Model.ProfilePicturePath" alt="profile picture" width="80" height="80" />
    <h4>School</h4>
    <h4>School placeholder</h4>
    <h4>Department</h4>
    <h4>Department placeholder</h4>
    <h4>About me</h4>
    <h4>description placeholder</h4>
>>>>>>> cd221c8d70199f091c9d2028b4345f4edaec5817

</div>

<div class="container col-md-6 col-md-pull-6">
    <h4>User posts</h4>
    <!-- TODO: Nota partial view fyrir newsfeed og gera frekar RenderPartial.
        Ef að Model.Posts verður breytt frá List<Post> yfir í List<PostViewModel>
        er hægt að gera það svona: (at)Html.RenderPartial("_newsfeed", Model.Posts)-->
    @{Html.RenderPartial("_NewsfeedPartial", Model.Posts);}
</div>


